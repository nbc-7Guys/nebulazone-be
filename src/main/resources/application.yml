server:
  port: 8080

spring:
  application:
    name: nebulazone

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/nebulazone?useSSL=false&allowPublicKeyRetrieval=true
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate

    properties:
      hibernate:
        show_sql: false
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  data:
    redis:
      host: localhost
      port: 6379

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ap-northeast-2

      s3:
        bucket: ${AWS_S3_BUCKET}

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_API_KEY}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client-name: Kakao

          naver:
            client-id: ${NAVER_API_KEY}
            client-secret: ${NAVER_API_SECRET_KEY}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
            client-name: Naver

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  elasticsearch:
    uris: ${ES_URI}

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

  token:
    access:
      second: 60
      minute: 60
      hour: 12
    refresh:
      second: 60
      minute: 60
      hour: 24

management:
  endpoints:
    web:
      exposure:
        include:
          - prometheus
          - health
  endpoint:
    prometheus:
      access: unrestricted
  prometheus:
    metrics:
      export:
        enabled: true

toss:
  secret-key: ${TOSS_SECRET_KEY}
  client-key: ${TOSS_CLIENT_KEY}

frontend:
  url: ${FRONT_END_URL}
